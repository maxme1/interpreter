program = statement*

# TODO: add empty statements consisting just of a semicolon
statement = (StmtBody DELIMITER) | block | ifStmt | whileStmt

StmtBody = expression | 'break' | 'continue'

# TODO: possibly optional first statement
ifStmt = 'if' '(' expression ')' (statement ('else' statement)? )?

whileStmt = 'while' '(' expression ')' statement

block = '{' statement* '}'

-- expression --

expression = comparison | assignment

assignment = IDENTIFIER '=' expression

comparison = term (( '==' | '>=' | '<=' | '<' | '>' | '!=' ) term )*

term = factor ( ('+' | '-') factor )*

factor = unary ( ('*' | '/') unary )*

# TODO: maybe add unlimited unary operations
unary = ('+' | '-')? primary

primary = literal call*

literal = NUMBER | '(' expression ')' | IDENTIFIER | BOOL

# call = '(' ( expression (SEPARATOR expression)* )? ')'
# a simpler version for now
call = '(' expression ')'

-- literals --

NUMBER = '\d+'
IDENTIFIER = '[^a-zA-Z_]\w*'
BOOL = 'True' | 'False'
DELIMITER = ';'
SEPARATOR = ','